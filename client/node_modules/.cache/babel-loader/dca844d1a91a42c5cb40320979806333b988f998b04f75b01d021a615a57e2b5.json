{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_PROFILE, UPDATE_PROFILE, PROFILE_ERROR } from './types';\n\n// Get current users profile\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('api/profile/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (error) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: error.response,\n        status: error.response.status\n      }\n    });\n  }\n};\n\n// Create or Update profile\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post('/api/profile', formData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n    if (!edit) {\n      history.navigate('/dashboard');\n    }\n  } catch (error) {\n    const errors = error.response.data.errors;\n    if (errors) {\n      errors.forEach(err => dispatch(setAlert(err.msg, 'danger')));\n    }\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: 'Profile could not be saved',\n        status: error.response.status\n      }\n    });\n  }\n};\n\n// Add Experience\nexport const addExperience = (formData, navigate) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profile/experience', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Experience Added', 'success'));\n    navigate('/dashboard');\n  } catch (error) {\n    const errors = error.response.data.errors;\n    if (errors) {\n      errors.forEach(err => dispatch(setAlert(err.msg, 'danger')));\n    }\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: 'Profile could not be saved',\n        status: error.response.status\n      }\n    });\n  }\n};\n\n// Add Education\nexport const addEducation = (formData, navigate) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profile/education', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert('Education Added', 'success'));\n    navigate('/dashboard');\n  } catch (error) {\n    const errors = error.response.data.errors;\n    if (errors) {\n      errors.forEach(err => dispatch(setAlert(err.msg, 'danger')));\n    }\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: 'Profile could not be saved',\n        status: error.response.status\n      }\n    });\n  }\n};","map":{"version":3,"names":["axios","setAlert","GET_PROFILE","UPDATE_PROFILE","PROFILE_ERROR","getCurrentProfile","dispatch","res","get","type","payload","data","error","msg","response","status","createProfile","formData","history","edit","config","headers","post","navigate","errors","forEach","err","addExperience","put","addEducation"],"sources":["/Users/sudhin.justin/source/Projects/devconnector/client/src/actions/profile.js"],"sourcesContent":["import axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n  GET_PROFILE,\n  UPDATE_PROFILE,\n  PROFILE_ERROR,\n} from './types';\n\n// Get current users profile\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('api/profile/me');\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data,\n    })\n  } catch (error) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: { \n        msg: error.response, \n        status: error.response.status\n      }\n    })\n  }\n}\n\n// Create or Update profile\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n\n    const res = await axios.post('/api/profile', formData, config);\n\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data,\n    });\n\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n\n    if(!edit) {\n      history.navigate('/dashboard');\n    }\n  } catch (error) {\n    const errors = error.response.data.errors;\n\n    if(errors) {\n      errors.forEach(err => dispatch(setAlert(err.msg, 'danger')))\n    }\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: 'Profile could not be saved',\n        status: error.response.status,\n      }\n    }); \n  }\n}\n\n// Add Experience\nexport const addExperience = (formData, navigate) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n\n    const res = await axios.put('/api/profile/experience', formData, config);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n\n    dispatch(setAlert('Experience Added', 'success'));\n\n    navigate('/dashboard');\n  } catch (error) {\n    const errors = error.response.data.errors;\n\n    if(errors) {\n      errors.forEach(err => dispatch(setAlert(err.msg, 'danger')))\n    }\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: 'Profile could not be saved',\n        status: error.response.status,\n      }\n    }); \n  }  \n}\n\n// Add Education\nexport const addEducation = (formData, navigate) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }\n\n    const res = await axios.put('/api/profile/education', formData, config);\n\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data,\n    });\n\n    dispatch(setAlert('Education Added', 'success'));\n    \n    navigate('/dashboard');\n\n  } catch (error) {\n    const errors = error.response.data.errors;\n\n    if(errors) {\n      errors.forEach(err => dispatch(setAlert(err.msg, 'danger')))\n    }\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: 'Profile could not be saved',\n        status: error.response.status,\n      }\n    }); \n  }  \n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}