{"ast":null,"code":"import axios from'axios';import{setAlert}from'./alert';import{REGISTER_SUCCESS,REGISTER_FAIL,USER_LOADED,AUTH_ERROR,LOGIN_SUCCESS,LOGIN_FAIL,LOGOUT,CLEAR_PROFILE}from'./types';import setAuthToken from'../utils/setAuthToken';// Load User\nexport const loadUser=()=>async dispatch=>{if(localStorage.token){setAuthToken(localStorage.token);}try{const res=await axios.get('/api/auth');dispatch({type:USER_LOADED,payload:res.data});}catch(error){dispatch({type:AUTH_ERROR});}};// Register User\nexport const register=_ref=>{let{name,email,password}=_ref;return async dispatch=>{const config={headers:{\"Content-Type\":\"application/json\"}};const body=JSON.stringify({name,email,password});try{const res=await axios.post('/api/users',body,config);dispatch({type:REGISTER_SUCCESS,payload:res.data});dispatch(loadUser());}catch(error){const errors=error.response.data.errors;if(errors){errors.forEach(err=>dispatch(setAlert(err.msg,'danger')));}dispatch({type:REGISTER_FAIL});}};};// Login User\nexport const login=(email,password)=>async dispatch=>{const config={headers:{\"Content-Type\":\"application/json\"}};const body=JSON.stringify({email,password});try{const res=await axios.post('/api/auth',body,config);dispatch({type:LOGIN_SUCCESS,payload:res.data});dispatch(loadUser());}catch(error){const errors=error.response.data.errors;if(errors){errors.forEach(err=>dispatch(setAlert(err.msg,'danger')));}dispatch({type:LOGIN_FAIL});}};// Logout/Clear Profile\nexport const logout=()=>dispatch=>{dispatch({type:CLEAR_PROFILE});dispatch({type:LOGOUT});};","map":{"version":3,"names":["axios","setAlert","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_PROFILE","setAuthToken","loadUser","dispatch","localStorage","token","res","get","type","payload","data","error","register","_ref","name","email","password","config","headers","body","JSON","stringify","post","errors","response","forEach","err","msg","login","logout"],"sources":["/Users/sudhin.justin/source/Projects/devconnector/server/client/src/actions/auth.js"],"sourcesContent":["import axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_PROFILE,\n} from './types';\nimport setAuthToken from '../utils/setAuthToken';\n\n// Load User\nexport const loadUser = () => async dispatch => {\n  if(localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get('/api/auth');\n\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data,\n    })\n  } catch (error) {\n    dispatch({\n      type: AUTH_ERROR\n    })\n  }\n}\n\n// Register User\nexport const register = ({ name, email, password }) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }\n\n  const body = JSON.stringify({ name, email, password });\n  try {\n    const res = await axios.post('/api/users', body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n\n    dispatch(loadUser());    \n  } catch (error) {\n    const errors = error.response.data.errors;\n    if(errors) {\n      errors.forEach(err => dispatch(setAlert(err.msg, 'danger')))\n    }\n    dispatch({\n      type: REGISTER_FAIL,\n    });    \n  }\n}\n\n// Login User\nexport const login = (email , password) => async dispatch => {\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }\n\n  const body = JSON.stringify({ email, password });\n  try {\n    const res = await axios.post('/api/auth', body, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    \n    dispatch(loadUser());\n  } catch (error) {\n    const errors = error.response.data.errors;\n    if(errors) {\n      errors.forEach(err => dispatch(setAlert(err.msg, 'danger')))\n    }\n    dispatch({\n      type: LOGIN_FAIL,\n    });    \n  }\n}\n\n// Logout/Clear Profile\nexport const logout = () => dispatch => {\n  dispatch({ type: CLEAR_PROFILE });\n  dispatch({ type: LOGOUT });\n}\n\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,KAAQ,SAAS,CAClC,OACEC,gBAAgB,CAChBC,aAAa,CACbC,WAAW,CACXC,UAAU,CACVC,aAAa,CACbC,UAAU,CACVC,MAAM,CACNC,aAAa,KACR,SAAS,CAChB,MAAO,CAAAC,YAAY,KAAM,uBAAuB,CAEhD;AACA,MAAO,MAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,KAAM,CAAAC,QAAQ,EAAI,CAC9C,GAAGC,YAAY,CAACC,KAAK,CAAE,CACrBJ,YAAY,CAACG,YAAY,CAACC,KAAK,CAAC,CAClC,CAEA,GAAI,CACF,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAf,KAAK,CAACgB,GAAG,CAAC,WAAW,CAAC,CAExCJ,QAAQ,CAAC,CACPK,IAAI,CAAEb,WAAW,CACjBc,OAAO,CAAEH,GAAG,CAACI,IACf,CAAC,CAAC,CACJ,CAAE,MAAOC,KAAK,CAAE,CACdR,QAAQ,CAAC,CACPK,IAAI,CAAEZ,UACR,CAAC,CAAC,CACJ,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAgB,QAAQ,CAAGC,IAAA,MAAC,CAAEC,IAAI,CAAEC,KAAK,CAAEC,QAAS,CAAC,CAAAH,IAAA,OAAK,MAAM,CAAAV,QAAQ,EAAI,CACvE,KAAM,CAAAc,MAAM,CAAG,CACbC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAED,KAAM,CAAAC,IAAI,CAAGC,IAAI,CAACC,SAAS,CAAC,CAAEP,IAAI,CAAEC,KAAK,CAAEC,QAAS,CAAC,CAAC,CACtD,GAAI,CACF,KAAM,CAAAV,GAAG,CAAG,KAAM,CAAAf,KAAK,CAAC+B,IAAI,CAAC,YAAY,CAAEH,IAAI,CAAEF,MAAM,CAAC,CACxDd,QAAQ,CAAC,CACPK,IAAI,CAAEf,gBAAgB,CACtBgB,OAAO,CAAEH,GAAG,CAACI,IACf,CAAC,CAAC,CAEFP,QAAQ,CAACD,QAAQ,CAAC,CAAC,CAAC,CACtB,CAAE,MAAOS,KAAK,CAAE,CACd,KAAM,CAAAY,MAAM,CAAGZ,KAAK,CAACa,QAAQ,CAACd,IAAI,CAACa,MAAM,CACzC,GAAGA,MAAM,CAAE,CACTA,MAAM,CAACE,OAAO,CAACC,GAAG,EAAIvB,QAAQ,CAACX,QAAQ,CAACkC,GAAG,CAACC,GAAG,CAAE,QAAQ,CAAC,CAAC,CAAC,CAC9D,CACAxB,QAAQ,CAAC,CACPK,IAAI,CAAEd,aACR,CAAC,CAAC,CACJ,CACF,CAAC,GAED;AACA,MAAO,MAAM,CAAAkC,KAAK,CAAGA,CAACb,KAAK,CAAGC,QAAQ,GAAK,KAAM,CAAAb,QAAQ,EAAI,CAC3D,KAAM,CAAAc,MAAM,CAAG,CACbC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAED,KAAM,CAAAC,IAAI,CAAGC,IAAI,CAACC,SAAS,CAAC,CAAEN,KAAK,CAAEC,QAAS,CAAC,CAAC,CAChD,GAAI,CACF,KAAM,CAAAV,GAAG,CAAG,KAAM,CAAAf,KAAK,CAAC+B,IAAI,CAAC,WAAW,CAAEH,IAAI,CAAEF,MAAM,CAAC,CACvDd,QAAQ,CAAC,CACPK,IAAI,CAAEX,aAAa,CACnBY,OAAO,CAAEH,GAAG,CAACI,IACf,CAAC,CAAC,CAEFP,QAAQ,CAACD,QAAQ,CAAC,CAAC,CAAC,CACtB,CAAE,MAAOS,KAAK,CAAE,CACd,KAAM,CAAAY,MAAM,CAAGZ,KAAK,CAACa,QAAQ,CAACd,IAAI,CAACa,MAAM,CACzC,GAAGA,MAAM,CAAE,CACTA,MAAM,CAACE,OAAO,CAACC,GAAG,EAAIvB,QAAQ,CAACX,QAAQ,CAACkC,GAAG,CAACC,GAAG,CAAE,QAAQ,CAAC,CAAC,CAAC,CAC9D,CACAxB,QAAQ,CAAC,CACPK,IAAI,CAAEV,UACR,CAAC,CAAC,CACJ,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAA+B,MAAM,CAAGA,CAAA,GAAM1B,QAAQ,EAAI,CACtCA,QAAQ,CAAC,CAAEK,IAAI,CAAER,aAAc,CAAC,CAAC,CACjCG,QAAQ,CAAC,CAAEK,IAAI,CAAET,MAAO,CAAC,CAAC,CAC5B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}