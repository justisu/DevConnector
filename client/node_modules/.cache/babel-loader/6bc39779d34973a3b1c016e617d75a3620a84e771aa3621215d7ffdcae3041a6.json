{"ast":null,"code":"var _jsxFileName = \"/Users/sudhin.justin/source/Projects/devconnector/client/src/components/profile/ProfileGithub.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layouts/Spinner';\nimport { getGithubRepos } from '../../actions/profile';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProfileGithub = ({\n  username,\n  getGithubRepos,\n  repos\n}) => {\n  _s();\n  useEffect(() => {\n    getGithubRepos(username);\n  }, [getGithubRepos, username]);\n  console.log(\"repos: \", repos);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-github\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-primary my-1\",\n      children: \"Github Repos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), repos === null ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 25\n    }, this) :\n    /*#__PURE__*/\n    // repos.map((repo) => (\n    // <div key=\"repo._id\" className=\"repo bg-white p-1 my-1\">\n    //     <div>\n    //       <h4>\n    //         <a href={repo.html_url} target=\"_blank\" rel=\"noopener noreferrer\">{repo.name}</a>\n    //       </h4>\n    //     </div>\n    // </div>\n    // ))\n    _jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfileGithub, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = ProfileGithub;\nProfileGithub.propTypes = {\n  getGithubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired\n};\nconst mapStateToProps = state => ({\n  repos: state.repos\n});\nexport default connect(mapStateToProps, {\n  getGithubRepos\n})(ProfileGithub);\nvar _c;\n$RefreshReg$(_c, \"ProfileGithub\");","map":{"version":3,"names":["React","useEffect","PropTypes","connect","Spinner","getGithubRepos","jsxDEV","_jsxDEV","Fragment","_Fragment","ProfileGithub","username","repos","_s","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","func","isRequired","array","string","mapStateToProps","state","$RefreshReg$"],"sources":["/Users/sudhin.justin/source/Projects/devconnector/client/src/components/profile/ProfileGithub.js"],"sourcesContent":["import React, { useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux';\nimport Spinner from '../layouts/Spinner';\nimport { getGithubRepos } from '../../actions/profile';\n\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\n\n  useEffect(() => {\n    getGithubRepos(username)\n  }, [getGithubRepos, username]);\n  console.log(\"repos: \", repos)\n  return (\n    <div className=\"profile-github\">\n      <h2 className=\"text-primary my-1\">Github Repos</h2>\n      {repos === null ? <Spinner /> : (\n          // repos.map((repo) => (\n          // <div key=\"repo._id\" className=\"repo bg-white p-1 my-1\">\n          //     <div>\n          //       <h4>\n          //         <a href={repo.html_url} target=\"_blank\" rel=\"noopener noreferrer\">{repo.name}</a>\n          //       </h4>\n          //     </div>\n          // </div>\n          // ))\n          <></>\n       )}\n    </div>\n  )\n}\n\nProfileGithub.propTypes = {\n  getGithubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired\n}\n\nconst mapStateToProps = state => ({\n  repos: state.repos,  \n})\n\nexport default connect(mapStateToProps, { getGithubRepos }) (ProfileGithub);"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,OAAO,QAAQ,aAAa;AACrC,OAAOC,OAAO,MAAM,oBAAoB;AACxC,SAASC,cAAc,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEvD,MAAMC,aAAa,GAAGA,CAAC;EAAEC,QAAQ;EAAEN,cAAc;EAAEO;AAAM,CAAC,KAAK;EAAAC,EAAA;EAE7DZ,SAAS,CAAC,MAAM;IACdI,cAAc,CAACM,QAAQ,CAAC;EAC1B,CAAC,EAAE,CAACN,cAAc,EAAEM,QAAQ,CAAC,CAAC;EAC9BG,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEH,KAAK,CAAC;EAC7B,oBACEL,OAAA;IAAKS,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BV,OAAA;MAAIS,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAClDT,KAAK,KAAK,IAAI,gBAAGL,OAAA,CAACH,OAAO;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IAAA;IACzB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAd,OAAA,CAAAE,SAAA,mBAAI,CACN;EAAA;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAAR,EAAA,CAvBKH,aAAa;AAAAY,EAAA,GAAbZ,aAAa;AAyBnBA,aAAa,CAACa,SAAS,GAAG;EACxBlB,cAAc,EAAEH,SAAS,CAACsB,IAAI,CAACC,UAAU;EACzCb,KAAK,EAAEV,SAAS,CAACwB,KAAK,CAACD,UAAU;EACjCd,QAAQ,EAAET,SAAS,CAACyB,MAAM,CAACF;AAC7B,CAAC;AAED,MAAMG,eAAe,GAAGC,KAAK,KAAK;EAChCjB,KAAK,EAAEiB,KAAK,CAACjB;AACf,CAAC,CAAC;AAEF,eAAeT,OAAO,CAACyB,eAAe,EAAE;EAAEvB;AAAe,CAAC,CAAC,CAAEK,aAAa,CAAC;AAAC,IAAAY,EAAA;AAAAQ,YAAA,CAAAR,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}