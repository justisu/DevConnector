{"ast":null,"code":"var _jsxFileName = \"/Users/sudhin.justin/source/Projects/devconnector/client/src/components/profile/ProfileGithub.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layouts/Spinner';\nimport { getGithubRepos } from '../../actions/profile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfileGithub = ({\n  username,\n  getGithubRepos,\n  repos\n}) => {\n  _s();\n  useEffect(() => {\n    getGithubRepos(username);\n  }, [getGithubRepos, username]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"ProfileGithub\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfileGithub, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = ProfileGithub;\nProfileGithub.propTypes = {\n  getGithubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired\n};\nconst mapStateToProps = state => ({\n  repos: state.repos\n});\nexport default connect(mapStateToProps, {\n  getGithubRepos\n})(ProfileGithub);\nvar _c;\n$RefreshReg$(_c, \"ProfileGithub\");","map":{"version":3,"names":["React","useEffect","PropTypes","connect","Spinner","getGithubRepos","jsxDEV","_jsxDEV","ProfileGithub","username","repos","_s","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","propTypes","func","isRequired","array","string","mapStateToProps","state","$RefreshReg$"],"sources":["/Users/sudhin.justin/source/Projects/devconnector/client/src/components/profile/ProfileGithub.js"],"sourcesContent":["import React, { useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux';\nimport Spinner from '../layouts/Spinner';\nimport { getGithubRepos } from '../../actions/profile';\n\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\n\n  useEffect(() => {\n    getGithubRepos(username)\n  }, [getGithubRepos, username]);\n  return (\n    <div>ProfileGithub</div>\n  )\n}\n\nProfileGithub.propTypes = {\n  getGithubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired\n}\n\nconst mapStateToProps = state => ({\n  repos: state.repos,  \n})\n\nexport default connect(mapStateToProps, { getGithubRepos }) (ProfileGithub);"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,OAAO,QAAQ,aAAa;AACrC,OAAOC,OAAO,MAAM,oBAAoB;AACxC,SAASC,cAAc,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,aAAa,GAAGA,CAAC;EAAEC,QAAQ;EAAEJ,cAAc;EAAEK;AAAM,CAAC,KAAK;EAAAC,EAAA;EAE7DV,SAAS,CAAC,MAAM;IACdI,cAAc,CAACI,QAAQ,CAAC;EAC1B,CAAC,EAAE,CAACJ,cAAc,EAAEI,QAAQ,CAAC,CAAC;EAC9B,oBACEF,OAAA;IAAAK,QAAA,EAAK;EAAa;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAE5B,CAAC;AAAAL,EAAA,CARKH,aAAa;AAAAS,EAAA,GAAbT,aAAa;AAUnBA,aAAa,CAACU,SAAS,GAAG;EACxBb,cAAc,EAAEH,SAAS,CAACiB,IAAI,CAACC,UAAU;EACzCV,KAAK,EAAER,SAAS,CAACmB,KAAK,CAACD,UAAU;EACjCX,QAAQ,EAAEP,SAAS,CAACoB,MAAM,CAACF;AAC7B,CAAC;AAED,MAAMG,eAAe,GAAGC,KAAK,KAAK;EAChCd,KAAK,EAAEc,KAAK,CAACd;AACf,CAAC,CAAC;AAEF,eAAeP,OAAO,CAACoB,eAAe,EAAE;EAAElB;AAAe,CAAC,CAAC,CAAEG,aAAa,CAAC;AAAC,IAAAS,EAAA;AAAAQ,YAAA,CAAAR,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}