{"ast":null,"code":"var _jsxFileName = \"/Users/sudhin.justin/source/Projects/devconnector/client/src/components/dashboard/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, Fragment } from 'react';\nimport { Link } from 'react-router';\nimport { connect } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Spinner from '../layouts/Spinner';\nimport { getCurrentProfile } from '../../actions/profile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  auth: {\n    user,\n    isAuthenticated,\n    loading: authLoading\n  },\n  profile: {\n    profile,\n    loading\n  },\n  getCurrentProfile\n}) => {\n  _s();\n  useEffect(() => {\n    getCurrentProfile();\n  }, [getCurrentProfile]);\n  if (!isAuthenticated && !authLoading) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this);\n  }\n  return loading && profile === null ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"large text-primary\",\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lead\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), \"Welcome \", user && user.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), profile !== undefined ? /*#__PURE__*/_jsxDEV(Fragment, {\n      children: \"Has\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 15\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"You have not yet setup a Profile. Please add some information\", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/create-profile\",\n          className: \"btn btn-primary my-1\",\n          children: \"Create Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 7\n  }, this);\n};\n_s(Dashboard, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Dashboard;\nDashboard.propTypes = {\n  auth: PropTypes.object.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\nexport default connect(mapStateToProps, {\n  getCurrentProfile\n})(Dashboard);\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","Fragment","Link","connect","Navigate","PropTypes","Spinner","getCurrentProfile","jsxDEV","_jsxDEV","Dashboard","auth","user","isAuthenticated","loading","authLoading","profile","_s","to","fileName","_jsxFileName","lineNumber","columnNumber","children","className","name","undefined","_c","propTypes","object","isRequired","func","mapStateToProps","state","$RefreshReg$"],"sources":["/Users/sudhin.justin/source/Projects/devconnector/client/src/components/dashboard/Dashboard.js"],"sourcesContent":["import React, { useEffect, Fragment } from 'react';\nimport { Link } from 'react-router';\nimport { connect } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport Spinner from '../layouts/Spinner';\nimport { getCurrentProfile } from '../../actions/profile';\n\nconst Dashboard = ({ auth: { user, isAuthenticated, loading: authLoading }, profile: { profile, loading }, getCurrentProfile }) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, [getCurrentProfile]);\n\n  if(!isAuthenticated && !authLoading) {\n    return <Navigate to='/login' />\n  }\n  return (\n    loading && profile === null \n    ? <Spinner /> \n    : <Fragment>\n        <h1 className='large text-primary'>Dashboard</h1>\n        <p className='lead'>\n          <i className='fas fa-user'></i>\n          Welcome { user && user.name }\n        </p>\n        {\n          profile !== undefined \n            ? <Fragment>Has</Fragment> \n            : <Fragment>\n                <p>You have not yet setup a Profile. Please add some information\n                  <Link to='/create-profile' className='btn btn-primary my-1'>Create Profile</Link>\n                </p>\n              </Fragment>\n        }\n      </Fragment>\n  )\n}\n\nDashboard.propTypes = {\n  auth: PropTypes.object.isRequired,\n  getCurrentProfile: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile,\n});\n\nexport default connect(mapStateToProps, { getCurrentProfile })(Dashboard);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}