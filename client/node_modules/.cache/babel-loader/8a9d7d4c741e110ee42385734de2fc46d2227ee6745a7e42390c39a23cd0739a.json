{"ast":null,"code":"var _jsxFileName = \"/Users/sudhin.justin/source/Projects/devconnector/client/src/components/profiles/Profiles.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layouts/Spinner';\nimport { getProfiles } from '../../actions/profile';\nimport ProfileItem from './ProfileItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profiles = ({\n  getProfiles,\n  profile: {\n    profiles,\n    loading\n  }\n}) => {\n  _s();\n  useEffect(() => {\n    getProfiles();\n  }, [getProfile, profiles]);\n  return loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"large text-primary\",\n      children: \"Developers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lead\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fab fa-connectdevelop\",\n        children: \" Browse and connect with developers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profiles\",\n      children: profiles && profiles.length > 0 ? profiles.map(profile => /*#__PURE__*/_jsxDEV(ProfileItem, {\n        profile: profile\n      }, profile._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 41\n      }, this)) : /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"No profiles found...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 7\n  }, this);\n};\n_s(Profiles, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Profiles;\nProfiles.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  profile: state.profile\n});\nexport default connect(mapStateToProps, {\n  getProfiles\n})(Profiles);\nvar _c;\n$RefreshReg$(_c, \"Profiles\");","map":{"version":3,"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getProfiles","ProfileItem","jsxDEV","_jsxDEV","Profiles","profile","profiles","loading","_s","getProfile","fileName","_jsxFileName","lineNumber","columnNumber","children","className","length","map","_id","_c","propTypes","func","isRequired","object","mapStateToProps","state","$RefreshReg$"],"sources":["/Users/sudhin.justin/source/Projects/devconnector/client/src/components/profiles/Profiles.js"],"sourcesContent":["import React, { Fragment, useEffect } from 'react'\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layouts/Spinner';\nimport { getProfiles } from '../../actions/profile';\nimport ProfileItem from './ProfileItem';\n\nconst Profiles = ({ getProfiles, profile: { profiles, loading } } ) => {\n\n  useEffect(() => {\n    getProfiles();\n  }, [getProfile, profiles])\n  \n  return loading ? \n    <Spinner />\n    : (\n      <Fragment>\n        <h1 className=\"large text-primary\">Developers</h1>\n        <p className=\"lead\">\n          <i className=\"fab fa-connectdevelop\"> Browse and connect with developers</i>\n        </p>\n        <div className=\"profiles\">\n          {\n            profiles && profiles.length > 0 ? (\n              profiles.map((profile) => <ProfileItem key={profile._id} profile={profile} />)\n            ) : <h4>No profiles found...</h4>\n          }\n        </div>\n      </Fragment>\n    )\n}\n\nProfiles.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  profile: state.profile\n})\n\nexport default connect(mapStateToProps, { getProfiles })(Profiles)"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,OAAO,QAAQ,aAAa;AACrC,OAAOC,OAAO,MAAM,oBAAoB;AACxC,SAASC,WAAW,QAAQ,uBAAuB;AACnD,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAGA,CAAC;EAAEJ,WAAW;EAAEK,OAAO,EAAE;IAAEC,QAAQ;IAAEC;EAAQ;AAAE,CAAC,KAAM;EAAAC,EAAA;EAErEZ,SAAS,CAAC,MAAM;IACdI,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,CAACS,UAAU,EAAEH,QAAQ,CAAC,CAAC;EAE1B,OAAOC,OAAO,gBACZJ,OAAA,CAACJ,OAAO;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,gBAETV,OAAA,CAACR,QAAQ;IAAAmB,QAAA,gBACPX,OAAA;MAAIY,SAAS,EAAC,oBAAoB;MAAAD,QAAA,EAAC;IAAU;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClDV,OAAA;MAAGY,SAAS,EAAC,MAAM;MAAAD,QAAA,eACjBX,OAAA;QAAGY,SAAS,EAAC,uBAAuB;QAAAD,QAAA,EAAC;MAAmC;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3E,CAAC,eACJV,OAAA;MAAKY,SAAS,EAAC,UAAU;MAAAD,QAAA,EAErBR,QAAQ,IAAIA,QAAQ,CAACU,MAAM,GAAG,CAAC,GAC7BV,QAAQ,CAACW,GAAG,CAAEZ,OAAO,iBAAKF,OAAA,CAACF,WAAW;QAAmBI,OAAO,EAAEA;MAAQ,GAA9BA,OAAO,CAACa,GAAG;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAqB,CAAC,CAAC,gBAC5EV,OAAA;QAAAW,QAAA,EAAI;MAAoB;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEhC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CACX;AACL,CAAC;AAAAL,EAAA,CAvBKJ,QAAQ;AAAAe,EAAA,GAARf,QAAQ;AAyBdA,QAAQ,CAACgB,SAAS,GAAG;EACnBpB,WAAW,EAAEH,SAAS,CAACwB,IAAI,CAACC,UAAU;EACtCjB,OAAO,EAAER,SAAS,CAAC0B,MAAM,CAACD;AAC5B,CAAC;AAED,MAAME,eAAe,GAAGC,KAAK,KAAK;EAChCpB,OAAO,EAAEoB,KAAK,CAACpB;AACjB,CAAC,CAAC;AAEF,eAAeP,OAAO,CAAC0B,eAAe,EAAE;EAAExB;AAAY,CAAC,CAAC,CAACI,QAAQ,CAAC;AAAA,IAAAe,EAAA;AAAAO,YAAA,CAAAP,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}