{"ast":null,"code":"var _jsxFileName = \"/Users/sudhin.justin/source/Projects/devconnector/client/src/components/posts/Posts.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layouts/Spinner';\nimport { getPosts } from '../../actions/post';\nimport PostItem from './PostItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Posts = ({\n  getPosts,\n  post: {\n    posts,\n    loading\n  }\n}) => {\n  _s();\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n  return loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 15\n  }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"large text-primary-app\",\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lead\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"ti.fas.fa-user\",\n        children: \"Welcome to the community\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), posts.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(PostItem, {\n        post: post\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"No posts found...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(Posts, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Posts;\nPosts.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  post: state.post\n});\nexport default connect(mapStateToProps, {\n  getPosts\n})(Posts);\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getPosts","PostItem","jsxDEV","_jsxDEV","Posts","post","posts","loading","_s","fileName","_jsxFileName","lineNumber","columnNumber","children","className","length","map","_c","propTypes","func","isRequired","object","mapStateToProps","state","$RefreshReg$"],"sources":["/Users/sudhin.justin/source/Projects/devconnector/client/src/components/posts/Posts.js"],"sourcesContent":["import React, { Fragment, useEffect } from 'react'\nimport PropTypes from 'prop-types';\nimport { connect} from 'react-redux'\nimport Spinner from '../layouts/Spinner'\nimport { getPosts } from '../../actions/post';\nimport PostItem from './PostItem';\n\nconst Posts = ({ getPosts, post: { posts, loading } }) => {\n\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n\n  return (\n    loading ? <Spinner /> : (\n    <Fragment>\n      <h1 className=\"large text-primary-app\">Posts</h1>\n      <p className=\"lead\">\n        <i className=\"ti.fas.fa-user\">Welcome to the community</i>\n      </p>\n      { posts.length > 0 ? (\n        <div className=\"posts\">\n          {posts.map(post => (\n            <PostItem post={post} />\n          ))}\n        </div>\n      ) : (\n        <h4>No posts found...</h4>\n      )}\n    </Fragment>\n    )\n  )\n}\n\nPosts.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  post: state.post,\n})\n\nexport default connect(mapStateToProps, { getPosts})(Posts)"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,OAAO,QAAO,aAAa;AACpC,OAAOC,OAAO,MAAM,oBAAoB;AACxC,SAASC,QAAQ,QAAQ,oBAAoB;AAC7C,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,KAAK,GAAGA,CAAC;EAAEJ,QAAQ;EAAEK,IAAI,EAAE;IAAEC,KAAK;IAAEC;EAAQ;AAAE,CAAC,KAAK;EAAAC,EAAA;EAExDZ,SAAS,CAAC,MAAM;IACdI,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,OACEO,OAAO,gBAAGJ,OAAA,CAACJ,OAAO;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,gBACrBT,OAAA,CAACR,QAAQ;IAAAkB,QAAA,gBACPV,OAAA;MAAIW,SAAS,EAAC,wBAAwB;MAAAD,QAAA,EAAC;IAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjDT,OAAA;MAAGW,SAAS,EAAC,MAAM;MAAAD,QAAA,eACjBV,OAAA;QAAGW,SAAS,EAAC,gBAAgB;QAAAD,QAAA,EAAC;MAAwB;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD,CAAC,EACFN,KAAK,CAACS,MAAM,GAAG,CAAC,gBAChBZ,OAAA;MAAKW,SAAS,EAAC,OAAO;MAAAD,QAAA,EACnBP,KAAK,CAACU,GAAG,CAACX,IAAI,iBACbF,OAAA,CAACF,QAAQ;QAACI,IAAI,EAAEA;MAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CACxB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,gBAENT,OAAA;MAAAU,QAAA,EAAI;IAAiB;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAC1B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CACT;AAEL,CAAC;AAAAJ,EAAA,CAzBKJ,KAAK;AAAAa,EAAA,GAALb,KAAK;AA2BXA,KAAK,CAACc,SAAS,GAAG;EAChBlB,QAAQ,EAAEH,SAAS,CAACsB,IAAI,CAACC,UAAU;EACnCf,IAAI,EAAER,SAAS,CAACwB,MAAM,CAACD;AACzB,CAAC;AAED,MAAME,eAAe,GAAGC,KAAK,KAAK;EAChClB,IAAI,EAAEkB,KAAK,CAAClB;AACd,CAAC,CAAC;AAEF,eAAeP,OAAO,CAACwB,eAAe,EAAE;EAAEtB;AAAQ,CAAC,CAAC,CAACI,KAAK,CAAC;AAAA,IAAAa,EAAA;AAAAO,YAAA,CAAAP,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}