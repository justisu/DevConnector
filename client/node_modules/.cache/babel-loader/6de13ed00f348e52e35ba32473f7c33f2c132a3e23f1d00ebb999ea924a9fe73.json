{"ast":null,"code":"var _jsxFileName = \"/Users/sudhin.justin/source/Projects/devconnector/client/src/components/profile/ProfileGithub.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layouts/Spinner';\nimport { getGithubRepos } from '../../actions/profile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfileGithub = ({\n  username,\n  getGithubRepos,\n  repos\n}) => {\n  _s();\n  useEffect(() => {\n    getGithubRepos(username);\n  }, [getGithubRepos, username]);\n  console.log(\"repos: \", repos);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-github\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-primary-app my-1\",\n      children: \"Github Repos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), repos === null ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 25\n    }, this) : repos.map(repo => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"repo bg-white p-1 my-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: repo.html_url,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: repo.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: repo.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"badge badge-primary\",\n            children: [\"Stars: \", repo.stargazers_count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"badge badge-dark\",\n            children: [\"Watchers: \", repo.watchers_count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"badge badge-light\",\n            children: [\"Forks: \", repo.forks_count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 15\n      }, this)]\n    }, \"repo._id\", true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfileGithub, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = ProfileGithub;\nProfileGithub.propTypes = {\n  getGithubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired\n};\nconst mapStateToProps = state => ({\n  repos: state.profile.repos\n});\nexport default connect(mapStateToProps, {\n  getGithubRepos\n})(ProfileGithub);\nvar _c;\n$RefreshReg$(_c, \"ProfileGithub\");","map":{"version":3,"names":["React","useEffect","PropTypes","connect","Spinner","getGithubRepos","jsxDEV","_jsxDEV","ProfileGithub","username","repos","_s","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","repo","href","html_url","target","rel","name","description","stargazers_count","watchers_count","forks_count","_c","propTypes","func","isRequired","array","string","mapStateToProps","state","profile","$RefreshReg$"],"sources":["/Users/sudhin.justin/source/Projects/devconnector/client/src/components/profile/ProfileGithub.js"],"sourcesContent":["import React, { useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux';\nimport Spinner from '../layouts/Spinner';\nimport { getGithubRepos } from '../../actions/profile';\n\nconst ProfileGithub = ({ username, getGithubRepos, repos }) => {\n\n  useEffect(() => {\n    getGithubRepos(username)\n  }, [getGithubRepos, username]);\n  console.log(\"repos: \", repos)\n  return (\n    <div className=\"profile-github\">\n      <h2 className=\"text-primary-app my-1\">Github Repos</h2>\n      {repos === null ? <Spinner /> : (\n          repos.map((repo) => (\n          <div key=\"repo._id\" className=\"repo bg-white p-1 my-1\">\n              <div>\n                <h4>\n                  <a href={repo.html_url} target=\"_blank\" rel=\"noopener noreferrer\">{repo.name}</a>\n                </h4>\n                <p>{repo.description}</p>\n              </div>\n              <div>\n                <ul>\n                  <li className=\"badge badge-primary\">\n                    Stars: {repo.stargazers_count}\n                  </li>\n                  <li className=\"badge badge-dark\">\n                    Watchers: {repo.watchers_count}\n                  </li>\n                  <li className=\"badge badge-light\">\n                    Forks: {repo.forks_count}\n                  </li>                                  \n                </ul>\n              </div>\n          </div>\n          ))\n       )}\n    </div>\n  )\n}\n\nProfileGithub.propTypes = {\n  getGithubRepos: PropTypes.func.isRequired,\n  repos: PropTypes.array.isRequired,\n  username: PropTypes.string.isRequired\n}\n\nconst mapStateToProps = state => ({\n  repos: state.profile.repos,  \n})\n\nexport default connect(mapStateToProps, { getGithubRepos }) (ProfileGithub);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}