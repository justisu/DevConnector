{"ast":null,"code":"var _jsxFileName = \"/Users/sudhin.justin/source/Projects/devconnector/client/src/components/profile/ProfileExperience.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfileExperience = ({\n  experience\n}) => {\n  const {\n    company,\n    title,\n    location,\n    current,\n    to,\n    from,\n    description\n  } = experience;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      class: \"text-dark\",\n      children: company\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(Moment, {\n        format: \"YYYY/MM/DD\",\n        children: from\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 11\n      }, this), \" - \", !to ? ' Now' : /*#__PURE__*/_jsxDEV(Moment, {\n        format: \"YYYY/MM/DD\",\n        children: to\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 73\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Position: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 12\n      }, this), title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Description: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this), description, \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_c = ProfileExperience;\nProfileExperience.propTypes = {\n  experience: PropTypes.array.isRequired\n};\nexport default ProfileExperience;\nvar _c;\n$RefreshReg$(_c, \"ProfileExperience\");","map":{"version":3,"names":["React","Fragment","PropTypes","Moment","jsxDEV","_jsxDEV","ProfileExperience","experience","company","title","location","current","to","from","description","children","class","fileName","_jsxFileName","lineNumber","columnNumber","format","_c","propTypes","array","isRequired","$RefreshReg$"],"sources":["/Users/sudhin.justin/source/Projects/devconnector/client/src/components/profile/ProfileExperience.js"],"sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types'\nimport Moment from 'react-moment';\n\nconst ProfileExperience = ({experience }) => {\n  const { company, title, location, current, to, from, description } = experience;\n  \n  return (\n    <div>\n        <h3 class=\"text-dark\">{company}</h3>\n        <p>\n          <Moment format=\"YYYY/MM/DD\">{from}</Moment> - {!to ? ' Now' : <Moment format=\"YYYY/MM/DD\">{to}</Moment>}\n        </p>\n        <p><strong>Position: </strong>{title}</p>\n        <p>\n          <strong>Description: </strong>{description}.\n        </p>\n    </div>\n  )\n}\n\nProfileExperience.propTypes = {\n  experience: PropTypes.array.isRequired\n}\n\nexport default ProfileExperience;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,MAAM,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,iBAAiB,GAAGA,CAAC;EAACC;AAAW,CAAC,KAAK;EAC3C,MAAM;IAAEC,OAAO;IAAEC,KAAK;IAAEC,QAAQ;IAAEC,OAAO;IAAEC,EAAE;IAAEC,IAAI;IAAEC;EAAY,CAAC,GAAGP,UAAU;EAE/E,oBACEF,OAAA;IAAAU,QAAA,gBACIV,OAAA;MAAIW,KAAK,EAAC,WAAW;MAAAD,QAAA,EAAEP;IAAO;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACpCf,OAAA;MAAAU,QAAA,gBACEV,OAAA,CAACF,MAAM;QAACkB,MAAM,EAAC,YAAY;QAAAN,QAAA,EAAEF;MAAI;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,OAAG,EAAC,CAACR,EAAE,GAAG,MAAM,gBAAGP,OAAA,CAACF,MAAM;QAACkB,MAAM,EAAC,YAAY;QAAAN,QAAA,EAAEH;MAAE;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtG,CAAC,eACJf,OAAA;MAAAU,QAAA,gBAAGV,OAAA;QAAAU,QAAA,EAAQ;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAACX,KAAK;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzCf,OAAA;MAAAU,QAAA,gBACEV,OAAA;QAAAU,QAAA,EAAQ;MAAa;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAACN,WAAW,EAAC,GAC7C;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAAE,EAAA,GAfKhB,iBAAiB;AAiBvBA,iBAAiB,CAACiB,SAAS,GAAG;EAC5BhB,UAAU,EAAEL,SAAS,CAACsB,KAAK,CAACC;AAC9B,CAAC;AAED,eAAenB,iBAAiB;AAAC,IAAAgB,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}