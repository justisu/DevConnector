{"ast":null,"code":"var _jsxFileName = \"/Users/sudhin.justin/source/Projects/devconnector/client/src/components/profile/Profile.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link, useParams } from 'react-router';\nimport Spinner from '../layouts/Spinner';\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileExperience from './ProfileExperience';\nimport { getProfileById } from '../../actions/profile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = ({\n  getProfileById,\n  profile: {\n    profile\n  },\n  auth\n}) => {\n  _s();\n  var _profile$expereince;\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    getProfileById(id);\n  }, [getProfileById, id]);\n  console.log(\"profile: \", profile);\n  return profile === null ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/dev/profiles\",\n      className: \"btn btn-light\",\n      children: \"Back to Profiles\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }, this), auth.isAuthenticated && !auth.loading && auth.user._id === profile.user._id && /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/dev/edit-profile\",\n      className: \"btn btn-dark\",\n      children: \"Edit Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"profile-grid my-1\",\n      children: [/*#__PURE__*/_jsxDEV(ProfileTop, {\n        profile: profile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ProfileAbout, {\n        profile: profile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-exp bg-white p-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          class: \"text-primary\",\n          children: \"Experience\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this), ((_profile$expereince = profile.expereince) === null || _profile$expereince === void 0 ? void 0 : _profile$expereince.length) > 0 ? /*#__PURE__*/_jsxDEV(Fragment, {\n          children: profile.experience.map(experience => /*#__PURE__*/_jsxDEV(ProfileExperience, {\n            experience: experience\n          }, experience._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 23\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 19\n        }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"No experience credentials\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(Profile, \"XT1vicrm+NSYLQxrGm9hA77HN9Y=\", false, function () {\n  return [useParams];\n});\n_c = Profile;\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","Fragment","useEffect","PropTypes","connect","Link","useParams","Spinner","ProfileTop","ProfileAbout","ProfileExperience","getProfileById","jsxDEV","_jsxDEV","Profile","profile","auth","_s","_profile$expereince","id","console","log","fileName","_jsxFileName","lineNumber","columnNumber","children","to","className","isAuthenticated","loading","user","_id","class","expereince","length","experience","map","_c","propTypes","func","isRequired","object","mapStateToProps","state","$RefreshReg$"],"sources":["/Users/sudhin.justin/source/Projects/devconnector/client/src/components/profile/Profile.js"],"sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link, useParams } from 'react-router';\nimport Spinner from '../layouts/Spinner';\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileExperience from './ProfileExperience';\nimport { getProfileById } from '../../actions/profile'\n\nconst Profile = ({\n  getProfileById, \n  profile: { profile },\n  auth,\n}) => {\n  const { id } = useParams();\n  useEffect(() => {\n    getProfileById(id);\n  }, [getProfileById, id])\n  console.log(\"profile: \", profile)\n  return (\n    profile === null ? \n      <Spinner /> :\n      (\n        <Fragment>\n          <Link to=\"/dev/profiles\" className=\"btn btn-light\">Back to Profiles</Link>\n          {auth.isAuthenticated && !auth.loading && auth.user._id === profile.user._id && \n            (<Link to=\"/dev/edit-profile\" className=\"btn btn-dark\">Edit Profile</Link>)}\n          <div class=\"profile-grid my-1\">\n            <ProfileTop profile={profile} />\n            <ProfileAbout profile={profile} />\n            <div className=\"profile-exp bg-white p-2\">\n              <h2 class=\"text-primary\">Experience</h2>\n              {profile.expereince?.length > 0 \n                ? (\n                  <Fragment>\n                    {profile.experience.map(experience => (\n                      <ProfileExperience key={experience._id} experience={experience} />\n                    ))}\n                  </Fragment>\n                ) \n                : (<h4>No experience credentials</h4>)} \n\n            </div>\n          </div>\n        </Fragment>\n      )\n  )\n}\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth,\n})\n\nexport default connect(mapStateToProps, { getProfileById })(Profile);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}