{"ast":null,"code":"import React,{Fragment,useEffect}from'react';import{connect}from'react-redux';import{Link,useParams}from'react-router';import Spinner from'../layouts/Spinner';import ProfileTop from'./ProfileTop';import ProfileAbout from'./ProfileAbout';import ProfileExperience from'./ProfileExperience';import ProfileEducation from'./ProfileEducation';import ProfileGithub from'./ProfileGithub';import{getProfileById}from'../../actions/profile';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Profile=_ref=>{var _profile$education;let{getProfileById,profile:{profile},auth}=_ref;const{id}=useParams();useEffect(()=>{getProfileById(id);},[getProfileById,id]);return profile===null?/*#__PURE__*/_jsx(Spinner,{}):/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(Link,{to:\"/dev/profiles\",className:\"btn btn-light\",children:\"Back to Profiles\"}),auth.isAuthenticated&&!auth.loading&&auth.user._id===profile.user._id&&/*#__PURE__*/_jsx(Link,{to:\"/dev/edit-profile\",className:\"btn btn-dark\",children:\"Edit Profile\"}),/*#__PURE__*/_jsxs(\"div\",{class:\"profile-grid my-1\",children:[/*#__PURE__*/_jsx(ProfileTop,{profile:profile}),/*#__PURE__*/_jsx(ProfileAbout,{profile:profile}),/*#__PURE__*/_jsxs(\"div\",{className:\"profile-exp bg-white p-2\",children:[/*#__PURE__*/_jsx(\"h2\",{class:\"text-primary-app\",children:\"Experience\"}),profile.experience.length>0?/*#__PURE__*/_jsx(Fragment,{children:profile.experience.map(exp=>/*#__PURE__*/_jsx(ProfileExperience,{experience:exp},exp._id))}):/*#__PURE__*/_jsx(\"h4\",{children:\"No experience credentials\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"profile-edu bg-white p-2\",children:[/*#__PURE__*/_jsx(\"h2\",{class:\"text-primary-app\",children:\"Education\"}),((_profile$education=profile.education)===null||_profile$education===void 0?void 0:_profile$education.length)>0?/*#__PURE__*/_jsx(Fragment,{children:profile.education.map(edu=>/*#__PURE__*/_jsx(ProfileEducation,{education:edu},edu._id))}):/*#__PURE__*/_jsx(\"h4\",{children:\"No education credentials\"})]}),profile.githubusername&&/*#__PURE__*/_jsx(ProfileGithub,{username:profile.githubusername})]})]});};const mapStateToProps=state=>({profile:state.profile,auth:state.auth});export default connect(mapStateToProps,{getProfileById})(Profile);","map":{"version":3,"names":["React","Fragment","useEffect","connect","Link","useParams","Spinner","ProfileTop","ProfileAbout","ProfileExperience","ProfileEducation","ProfileGithub","getProfileById","jsx","_jsx","jsxs","_jsxs","Profile","_ref","_profile$education","profile","auth","id","children","to","className","isAuthenticated","loading","user","_id","class","experience","length","map","exp","education","edu","githubusername","username","mapStateToProps","state"],"sources":["/Users/sudhin.justin/source/Projects/devconnector/client/src/components/profile/Profile.js"],"sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link, useParams } from 'react-router';\nimport Spinner from '../layouts/Spinner';\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileExperience from './ProfileExperience';\nimport ProfileEducation from './ProfileEducation';\nimport ProfileGithub from './ProfileGithub';\nimport { getProfileById } from '../../actions/profile'\n\nconst Profile = ({\n  getProfileById, \n  profile: { profile },\n  auth,\n}) => {\n  const { id } = useParams();\n  useEffect(() => {\n    getProfileById(id);\n  }, [getProfileById, id])\n  return (\n    profile === null ? \n      <Spinner /> :\n      (\n        <Fragment>\n          <Link to=\"/dev/profiles\" className=\"btn btn-light\">Back to Profiles</Link>\n          {auth.isAuthenticated && !auth.loading && auth.user._id === profile.user._id && \n            (<Link to=\"/dev/edit-profile\" className=\"btn btn-dark\">Edit Profile</Link>)}\n          <div class=\"profile-grid my-1\">\n            <ProfileTop profile={profile} />\n            <ProfileAbout profile={profile} />\n            <div className=\"profile-exp bg-white p-2\">\n              <h2 class=\"text-primary-app\">Experience</h2>\n              {profile.experience.length > 0 \n                ? (\n                  <Fragment>\n                    {profile.experience.map(exp => (\n                      <ProfileExperience key={exp._id} experience={exp} />\n                    ))}\n                  </Fragment>\n                ) \n                : (<h4>No experience credentials</h4>)}\n            </div>\n            <div className=\"profile-edu bg-white p-2\">\n              <h2 class=\"text-primary-app\">Education</h2>\n              {profile.education?.length > 0 \n                ? (\n                  <Fragment>\n                    {profile.education.map(edu => (\n                      <ProfileEducation key={edu._id} education={edu} />\n                    ))}\n                  </Fragment>\n                ) \n                : (<h4>No education credentials</h4>)}\n            </div>\n\n            {profile.githubusername && (\n              <ProfileGithub username={profile.githubusername} />\n            )}           \n          </div>\n        </Fragment>\n      )\n  )\n}\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth,\n})\n\nexport default connect(mapStateToProps, { getProfileById })(Profile);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}